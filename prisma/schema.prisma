// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           String  @id @default(uuid())
  email        String
  name         String?
  username     String  @unique
  password     String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // refresh token
  refreshToken RefreshToken[]
  // tweets
  tweet Tweet[] 
  // MediaFiles
  mediaFiles MediaFile[]

}

model RefreshToken {
  id    String @id @default(uuid())
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String 
  user   User   @relation(fields: [userId], references: [id])
}

model Tweet {
  id           String  @id @default(uuid())
  text String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // author
  author User  @relation(fields: [authorId], references: [id])
  authorId String

  replyToId String?
  replyTo   Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete:Restrict, onUpdate:Restrict)
  replies   Tweet[] @relation("replies")

  // MediaFiles
  mediaFiles MediaFile[]

}

model MediaFile {
  id           String  @id @default(uuid())
  url String
  providerPublicId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // user
  user User @relation(fields: [userId], references: [id])
  userId String

  // tweets
  tweet Tweet? @relation(fields: [tweetId], references: [id])
  tweetId String?

}
